security:
  enable_authenticator_manager: true
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    App\Entity\User:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: userName
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      #      anonymous: true not longer supported since symfony update
      lazy: true
      provider: app_user_provider
      logout:
        path: app_logout
      form_login:
        # The route name that the login form submits to
        check_path: app_login
        # The name of the route where the login form lives
        # When the user tries to access a protected page, they are redirected here
        login_path: app_login
        # Secure the login form against CSRF
        # Reference: https://symfony.com/doc/current/security/csrf.html
        enable_csrf: true
        # The page users are redirect to when there is no previous page stored in the
        # session (for example when the users access directly to the login page).
        default_target_path: landingPage
      #custom_authenticator: App\Security\AppCustomAuthenticator
        # where to redirect after logout
        #target: app_any_route

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/admin, roles: ROLE_ADMIN, requires_channel: https }
